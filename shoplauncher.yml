---
- name: Create shoplauncher instances
  hosts: localhost
  gather_facts: False
  vars_files:
    - gce_vars/auth
    - gce_vars/machines
    - gce_vars/zone
  tasks:
    - name: create a disk mapped for shoplauncher App instance 1
      gcp_compute_disk:
        name: shoplauncher-disk-instance1
        size_gb: 200
        type: pd-ssd
        source_image: "{{ ubuntuimage }}"
        zone: "{{ zone.za }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: shoplauncher_instance1

    - name: create a disk mapped for shoplauncher App instance 2
      gcp_compute_disk:
        name: shoplauncher-disk-instance2
        size_gb: 200
        type: pd-ssd
        source_image: "{{ ubuntuimage }}"
        zone: "{{ zone.za }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: shoplauncher_instance2


    - name: create a VPC shoplauncher network
      gcp_compute_network:
        name: stockchecker-subnetwork
        auto_create_subnetworks: 'true'
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: network

    - name: create a firewall rules for shoplauncher app
      gcp_compute_firewall:
        name: shoplauncherapp-fw-ports
        network: "{{ network }}"
        allowed:
          - ip_protocol: icmp
          - ip_protocol: tcp
            ports:
              - '22'
              - '80'
              - '443'
        target_tags:
          - shoplauncher
        source_tags:
          - management
          - shoplauncherdb
          - stockcheck
          - greeneagle
          - redis
          - elasticsearch
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: firewall

    - name: create the shoplauncher app instance 1
      gcp_compute_instance:
        name: "{{ sl_zonea }}"
        machine_type: "{{ machine_type.shoplauncher }}"
        disks:
          - index: 0
            auto_delete: 'no'
            boot: 'true'
            source: "{{ shoplauncher_instance1 }}"
        labels:
          environment: shoplauncherprod
        network_interfaces:
          - network: "{{ network }}"
        tags:
          items:
            - shoplauncher
        metadata:
          ssh_user: "{{ ssh_user }}"
          ssh_key: "{{ ssh_key }}"
        zone: "{{ zone.za }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: shoplauncherappinstance1

    - name: create the shoplauncher app instance 2
      gcp_compute_instance:
        name: "{{ sl_zoneb }}"
        machine_type: "{{ machine_type.shoplauncher }}"
        disks:
          - index: 0
            auto_delete: 'no'
            boot: 'true'
            source: "{{ shoplauncher_instance2 }}"
        network_interfaces:
          - network: "{{ network }}"
        tags:
          items:
            - shoplauncher
        metadata:
          ssh_user: "{{ ssh_user }}"
          ssh_key: "{{ ssh_key }}"
        zone: "{{ zone.za }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: shoplauncherappinstance2

    - debug: var=shoplauncherappinstance1.networkInterfaces[0].networkIP
    - debug: var=shoplauncherappinstance2.networkInterfaces[0].networkIP

    - name: Add instance1 to group shoplaunchererapp
      add_host:
        name: "{{ shoplauncherappinstance1.networkInterfaces[0].networkIP }}"
        groups: shoplaunchererapp

    - name: Add instance2 to group shoplaunchererapp
      add_host:
        name: "{{ shoplauncherappinstance2.networkInterfaces[0].networkIP }}"
        groups: shoplaunchererapp

  post_tasks:
    - name: Wait for SSH for instance1
      wait_for:
        delay: 30
        host: "{{ shoplauncherappinstance1.networkInterfaces[0].networkIP }}"
        port: 22
        state: started
        timeout: 120

    - name: Wait for SSH for instance2
      wait_for:
        delay: 30
        host: "{{ shoplauncherappinstance2.networkInterfaces[0].networkIP }}"
        port: 22
        state: started
        timeout: 120


- hosts: shoplaunchererapp
  roles:
    - nginx
    - users
      #- mariadb
  gather_facts: true
  become: true
  vars:
    ansible_user: chudieagle
    ansible_ssh_private_key_file: /home/chudieagle/.ssh/id_chudieagle_rsa
