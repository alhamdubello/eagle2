---
- name: Play for stockchecker instance templates
  hosts: localhost
  gather_facts: False
  vars_files:
    - gce_vars/auth
    - gce_vars/machines
    - gce_vars/zone
  tasks:
    - name: create a VPC stockcheck network
      google.cloud.gcp_compute_network:
        name: stockchecker-subnetwork
        auto_create_subnetworks: 'true'
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: network

    - name: create a firewall rules for stockcheck app
      google.cloud.gcp_compute_firewall:
        name: stockcheckapp-fw-ports
        network: "{{ network }}"
        allowed:
          - ip_protocol: icmp
          - ip_protocol: tcp
            ports:
              - '22'
              - '80'
              - '443'
        target_tags:
          - stockcheck
        source_tags:
          - management
          - greeneagle
          - greeneagledev
          - redis
          - elasticsearch
          - kibana
          - shoplauncher
          - shoplauncherdev
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: firewall

    - name: creating instance template for stockchecker
      google.cloud.gcp_compute_instance_template:
        name: stockcheck-template
        properties:
          disks:
          - auto_delete: 'true'
            boot: 'true'
            initialize_params:
              disk_size_gb: 50
              source_image: "{{ image }}"
          machine_type: "{{ machine_type.stockcheck }}"
          network_interfaces:
          - network: "{{ network }}"
          tags:
            items:
            - stockcheck
          labels:
            environment: stockcheckprod
          metadata:
            startup-script: files/stockcheck.sh
            ssh_user: "{{ ssh_user }}"
            ssh_key: "{{ ssh_key }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: stockcheck_inst_template

    - name: create a region instance group manager
      google.cloud.gcp_compute_region_instance_group_manager:
        name: stockcheck-ins-grp-mgr
        base_instance_name: stockcheck-prod
        region: us-central1
        instance_template: "{{ stockcheck_inst_template }}"
        named_ports:
          - name: http
            port: 80
          - name: http
            port: 443
        target_size: 2
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: stockcheck_ins_grp_mgr

    - name: create a stockcheck region autoscaler
      google.cloud.gcp_compute_region_autoscaler:
        name: stockcheck-prod-region-autoscaler
        region: us-central1
        autoscaling_policy:
          min_num_replicas: 2
          max_num_replicas: 5
          cool_down_period_sec: 60
          cpu_utilization:
            utilization_target: 0.5
        target: "{{ stockcheck_ins_grp_mgr.selfLink }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present

    - name: Health Check for stockcheck 
      google.cloud.gcp_compute_region_health_check:
        name: "stockcheck-region-hc"
        type: "HTTP"
        http_health_check:
          port: 80
        healthy_threshold: 10
        timeout_sec: 2
        unhealthy_threshold: 5
        region: us-central1
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: stockcheck_region_hc

    - name: create a region backend service
      google.cloud.gcp_compute_region_backend_service:
        name: stockcheck-be
        backends:
        - group: "{{ stockcheck_ins_grp_mgr.selfLink }}"
        protocol: HTTP
        health_checks:
        - "{{ stockcheck_region_hc.selfLink }}"
        region: us-central1
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: backendservice

    - name: create a region URL map
      google.cloud.gcp_compute_region_url_map:
        name: stockcheck-prod-urlmap
        default_service: "{{ backendservice }}"
        region: us-central1
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: stockcheck_prod_urlmap

    - name: create a region target HTTP proxy
      google.cloud.gcp_compute_region_target_http_proxy:
        name: stockcheck-prod-http-proxy
        url_map: "{{ stockcheck_prod_urlmap }}"
        region: us-central1
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: stockcheck_prod_http_proxy
      
    - name: create a global address for stockchecker
      gcp_compute_global_address:
        name: "stockcheck-prod-globaladdress"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
      register: stockcheck_globaladdress

    - name: create a global forwarding rule
      google.cloud.gcp_compute_global_forwarding_rule:
        name: "stockcheck-auto-frule"
        ip_address: "{{ stockcheck_globaladdress.address }}"
        load_balancing_scheme: "EXTERNAL"
        port_range: 80-80
        target: "{{ stockcheck_prod_http_proxy.selfLink }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
      register: stockcheckforwardingrule

  post_tasks:
    - debug:
        msg: "Load balancer IP: {{ stockcheckforwardingrule['IPAddress'] }}"
